{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/logo.svg"],"names":["StyledHeader","styled","header","StyledWrapper","div","Logo","img","StyledLink","NavLink","StyledLogin","StyledButton","Button","Header","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","src","LogoUrl","to","exact","activeClassName","currentUser","attributes","username","type","onClick","logout","console","log","push","StyledFooter","footer","StyledP","p","Footer","StyledCenterDiv","Loading","Home","lazy","History","About","Login","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","logIn","logOut","current","Uploader","file","filename","item","Object","avFile","File","set","save","serverFile","page","limit","query","Query","include","skip","descending","equalTo","find","result","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","newFilename","newFile","isUploading","values","resetUser","toString","indexOf","HistoryStore","reset","ImageStore","context","createContext","stores","useContext","module","exports"],"mappings":"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","file":"static/js/main.33a75ebc.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport LogoUrl from './logo.svg'\nimport {NavLink, useHistory} from 'react-router-dom'\nimport styled from 'styled-components'\nimport {Button} from 'antd'\nimport {useStores} from '../stores'\nimport {observer} from 'mobx-react' // 监控组件数据变动\n\nconst StyledHeader = styled.header`\n  background-color: #3F434B;\n  color: white;\n`\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 15px;\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  \n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n  \n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n  \n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n  \n  \n  @media (max-width: 1470px) {\n    max-width: 100%;\n  }\n`\n\nconst Logo = styled.img`\n  height: 30px;\n`\n// 修改子组件样式，需要将子组件传入\nconst StyledLink = styled(NavLink)`\n  color: #83868A;\n  margin-left: 4px;\n  font-size: 12px;\n  &:hover{\n   color:#ACAAA7;\n  }\n  &.active {\n    color: white;\n  }\n  @media (min-width: 576px) {\n    margin-left: 8px;\n    font-size: 16px;\n  }\n  @media (min-width: 768px) {\n    margin-left: 30px;\n    font-size: 16px;\n  }\n`\n\nconst StyledLogin = styled.div`\n  margin-left: auto;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 4px;\n  font-size: 12px;\n  &.ant-btn-primary {\n    background: #52565C;\n    border-color: #52565C;\n    border-radius: 4px;\n    color: #B2B3B5;\n  }\n  @media (min-width: 576px) {\n    font-size: 14px;\n  }\n  @media (min-width: 768px) {\n    margin-left: 10px;\n  }\n`\n\nconst Header = observer(() => {\n  const history = useHistory()\n  const {UserStore, AuthStore} = useStores()\n\n  const handleLogout = () => {\n    AuthStore.logout()\n  }\n  const handleLogin = () => {\n    console.log('跳转到登录页面')\n    history.push('/login')\n  }\n  const handleRegister = () => {\n    console.log('跳转到注册页面')\n    history.push('/register')\n  }\n\n  useEffect(() => {\n    UserStore.pullUser()\n    //eslint-disable-next-line\n  }, [])\n\n  return (\n    <StyledHeader>\n      <StyledWrapper>\n        <Logo src={LogoUrl}/>\n        <nav>\n          <StyledLink to=\"/\" exact activeClassName=\"active\">首页</StyledLink>\n          <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\n          <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\n        </nav>\n        <StyledLogin>\n          {\n            UserStore.currentUser ?\n              <>\n                {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\"\n                                                                          onClick={handleLogout}>注销</StyledButton>\n              </> :\n              <>\n                <StyledButton type=\"primary\" onClick={handleLogin}>登陆</StyledButton>\n                <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n              </>\n          }\n        </StyledLogin>\n      </StyledWrapper>\n    </StyledHeader>\n  )\n})\n\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFooter = styled.footer`\n  padding: 10px 0;\n  text-align: center;\n  font-size: 12px;\n  color: #AAAAAA\n`\n\nconst StyledP = styled.p`\n  margin: 0;\n`\n\nfunction Footer() {\n  return (\n    <StyledFooter>\n      <StyledP>请勿上传违法中国大陆法律的图片，违者后果自负。</StyledP>\n      <StyledP>MIT Licensed | Copyright © 2020-present VF25G</StyledP>\n    </StyledFooter>\n  )\n}\n\nexport default Footer;","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCenterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nfunction Loading () {\n  return (\n    <StyledCenterDiv>\n      Loading...\n    </StyledCenterDiv>\n  )\n}\n\nexport default Loading","import React, {Suspense, lazy} from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport './components/reset.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Loading from './components/Loading'\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'\n\nconst Home = lazy(() => import('./pages/Home'))\nconst History = lazy(() => import('./pages/History'))\nconst About = lazy(() => import('./pages/About'))\nconst Login = lazy(() => import('./pages/Login'))\nconst Register = lazy(() => import('./pages/Register'))\n\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <main>\n        <Suspense fallback={<Loading/>}>\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/history\" component={History}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/register\" component={Register}/>\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer/>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n      <App/>\n    </Router>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import AV, { User } from 'leancloud-storage'\n\nAV.init({\n  appId: \"XJJiY8oiDeuTB7Skns4SHmVH-gzGzoHsz\",\n  appKey: \"1cncm2qVRBF3BhMu6AdBLLcL\",\n  serverURL: \"https://xjjiy8oi.lc-cn-n1-shared.com\"\n});\n\nconsole.log('start...')\n\nconst Auth = {\n  register(username, password) {\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n  login(username, password) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n  logout() {\n    User.logOut()\n  },\n  getCurrentUser() {\n    return User.current()\n  }\n}\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(filename, file)\n    item.set('filename', filename)\n    item.set('owner', AV.User.current())\n    item.set('url', avFile)\n    return new Promise((resolve, reject) => {\n      item.save().then(serverFile => resolve(serverFile), error => reject(error))\n    })\n  },\n  find({page = 0, limit = 10}) {\n    const query = new AV.Query('Image');\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page * limit)\n    query.descending('createdAt')\n    query.equalTo('owner', AV.User.current())\n    return new Promise((resolve, reject) => {\n      query.find()\n        .then(result => resolve(result))\n        .catch(error => reject(error))\n    })\n  }\n}\n\nexport { Auth, Uploader }","import { observable ,action } from 'mobx'\nimport { Auth } from '../models'\n\nclass UserStore {\n  @observable currentUser = null\n\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser()\n  }\n  @action resetUser() {\n    this.currentUser = null\n  }\n}\n\nexport default new UserStore()","import {observable, action} from 'mobx'\nimport {Uploader} from '../models'\nimport {message} from 'antd'\n\nclass HistoryStore {\n  @observable list = []\n  @observable isLoading = false\n  @observable hasMore = true\n  @observable page = 0\n  limit = 10\n\n  @action append(newList) {\n    this.list = this.list.concat(newList)\n  }\n\n  @action find() {\n    this.isLoading = true\n    Uploader.find({page: this.page, limit: this.limit})\n      .then(newList => {\n        this.append(newList)\n        this.page++\n        if (newList.length < this.limit) {\n          this.hasMore = false\n        }\n      }).catch(error => {\n      message.error('数据加载失败')\n      console.log(error)\n    }).finally(() => {\n      this.isLoading = false\n    })\n  }\n\n  @action reset() {\n    this.list = []\n    this.isLoading = false\n    this.hasMore = true\n    this.page = 0\n  }\n}\n\nexport default new HistoryStore()","import {observable, action} from 'mobx'\nimport {Uploader} from '../models'\nimport {message} from 'antd'\n\nclass ImageStore {\n  @observable filename = ''\n  @observable file = null\n  @observable isUploading = false\n  @observable serverFile = null\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile\n  }\n\n  @action upload() {\n    this.isUploading = true\n    this.serverFile = null\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename)\n        .then(serverFile => {\n          this.serverFile = serverFile\n          resolve(serverFile)\n        }).catch(error => {\n        message.error('上传失败')\n        reject(error)\n      }).finally(() => {\n        this.isUploading = false\n      })\n    })\n  }\n\n  @action reset() {\n    this.isUploading = false\n    this.serverFile = null\n  }\n}\n\nexport default new ImageStore()","import {observable, action} from 'mobx'\nimport {Auth} from '../models'\nimport UserStore from './user'\nimport HistoryStore from './history'\nimport ImageStore from './image'\nimport { message } from 'antd'\n\nclass AuthStore {\n  @observable values = {\n    username: '',\n    password: ''\n  }\n\n  @action setUsername(username) {\n    this.values.username = username\n  }\n\n  @action setPassword(password) {\n    this.values.password = password\n  }\n\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        })\n        .catch(error => {\n          UserStore.resetUser()\n          message.error('登录失败')\n          reject(error)\n        })\n    })\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        })\n        .catch(error => {\n          if (error.toString().indexOf(\"Username has already been taken\")) {\n            message.error('账户已存在')\n          } else {\n            message.error('注册失败')\n          }\n          UserStore.resetUser()\n          reject(error)\n        })\n    })\n  }\n\n  @action logout() {\n    Auth.logout()\n    UserStore.resetUser()\n    HistoryStore.reset()\n    ImageStore.reset()\n  }\n}\n\nexport default new AuthStore()\n","import { createContext, useContext } from 'react'\nimport AuthStore from './auth'\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n})\n\nwindow.stores = {\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n}\n\nexport const useStores = () => useContext(context)","module.exports = __webpack_public_path__ + \"static/media/logo.b1716509.svg\";"],"sourceRoot":""}