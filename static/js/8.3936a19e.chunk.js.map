{"version":3,"sources":["components/ContentInput.js","components/List.js","pages/History.js"],"names":["StyledTitle","styled","div","StyledInput","input","ContentInput","props","type","title","baseUrl","filename","onClick","event","target","select","readOnly","value","Img","img","StyledCenterDiv","ImageWrapper","StyledItemContent","StyledList","List","Component","observer","HistoryStore","useStores","useEffect","console","log","reset","options","initialLoad","pageStart","loadMore","find","hasMore","isLoading","useWindow","dataSource","list","renderItem","item","Item","key","id","href","attributes","url","rel","src","alt","tip","StyledH1","h1","History"],"mappings":"0nBAGA,IAAMA,EAAcC,IAAOC,IAAV,KAIXC,EAAcF,IAAOG,MAAV,KAwCFC,IAxBf,SAAsBC,GAAQ,IAITC,EAHZC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,SAevB,OACE,6BACE,kBAACV,EAAD,KAAcQ,GACd,kBAACL,EAAD,CAAaI,KAAK,OAAOI,QAjBT,SAACC,GAAD,OAAWA,EAAMC,OAAOC,UAiBOC,UAAQ,EAACC,OAfzCT,EAe0DC,EAd9D,aAATD,EACK,KAAOG,EAAW,KAAOD,EAAU,IACxB,aAATF,EACFE,EACW,SAATF,EACF,YAAcE,EAAU,+BAAiCA,EAAU,UAEnE,kB,wwCC3Bb,IAAMQ,EAAMhB,IAAOiB,IAAV,KAQHC,EAAkBlB,IAAOC,IAAV,KAKfF,EAAcC,IAAOC,IAAV,KAaXkB,EAAenB,IAAOC,IAAV,KAMZmB,EAAoBpB,IAAOC,IAAV,KAQjBoB,EAAarB,YAAOsB,IAAPtB,CAAH,KAuEDuB,EA7DGC,aAAS,WAAO,IACzBC,EAAgBC,cAAhBD,aAKPE,qBAAU,WAER,OADAC,QAAQC,IAAI,4BACJ,WACND,QAAQC,IAAI,4BACZJ,EAAaK,WAGd,IAEH,IAAMC,EAAU,CACdC,aAAa,EACbC,UAAW,EACXC,SAhBe,WACfT,EAAaU,QAgBbC,SAAUX,EAAaY,WAAaZ,EAAaW,QACjDE,WAAW,GAGb,OACE,6BACE,kBAAC,IAAmBP,EAClB,kBAACV,EAAD,CACEkB,WAAYd,EAAae,KACzBC,WACE,SAAAC,GAAI,OAAI,kBAAC,IAAKC,KAAN,CAAWC,IAAKF,EAAKG,IAC3B,kBAAC1B,EAAD,KACE,uBAAG2B,KAAMJ,EAAKK,WAAWC,IAAID,WAAWC,IACrCpC,OAAO,SACPqC,IAAI,uBACL,kBAACjC,EAAD,CAAKkC,IAAKR,EAAKK,WAAWC,IAAID,WAAWC,IAAKG,IAAI,OAItD,kBAAC/B,EAAD,KACE,kBAACrB,EAAD,KACG2C,EAAKK,WAAWtC,UAEnB,kBAACL,EAAA,EAAD,CAAcG,MAAM,WAAWC,QAASkC,EAAKK,WAAWC,IAAID,WAAWC,MACvE,kBAAC5C,EAAA,EAAD,CAAcG,MAAM,WAAWE,SAAUiC,EAAKK,WAAWtC,SAC3CD,QAASkC,EAAKK,WAAWC,IAAID,WAAWC,MACtD,kBAAC5C,EAAA,EAAD,CAAcG,MAAM,OAAOC,QAASkC,EAAKK,WAAWC,IAAID,WAAWC,UAKxEvB,EAAaY,WAAaZ,EAAaW,SACtC,kBAAClB,EAAD,KACE,kBAAC,IAAD,CAAMkC,IAAI,8B,4FCzGxB,IAAMC,EAAWrD,IAAOsD,GAAV,KAaCC,UATf,WACE,OACE,oCACE,kBAACF,EAAD,gBACA,kBAAC/B,EAAD","file":"static/js/8.3936a19e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.div`\n  font-size: 0.9rem;\n`\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: 1px solid gray;\n  border-radius: 0.25rem;\n  margin-bottom: 0.2rem;\n  padding: .375rem .75rem;\n  width: 100%;\n  &:focus {\n    color: #495057;\n    background-color: #fff;\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n  }\n`\n\nfunction ContentInput(props) {\n  const {title, baseUrl, filename} = props\n  const handleClick = (event) => event.target.select()\n\n  const formatUrl = (type) => {\n    if (type === 'Markdown') {\n      return '![' + filename + '](' + baseUrl + ')'\n    } else if (type === 'ImageURL') {\n      return baseUrl\n    } else if (type === 'HTML') {\n      return '<a href=\"' + baseUrl + '\" target=\"_blank\"><img src=\"' + baseUrl + '\" ></a>'\n    } else {\n      return 'undefined'\n    }\n  }\n\n  return (\n    <div>\n      <StyledTitle>{title}</StyledTitle>\n      <StyledInput type=\"text\" onClick={handleClick} readOnly value={formatUrl(title)}/>\n    </div>\n  )\n}\n\nexport default ContentInput","import React, {useEffect} from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport {List, Spin} from 'antd'\nimport styled from 'styled-components'\nimport ContentInput from './ContentInput'\n\nconst Img = styled.img`\n  width: 100px;\n  height: 120px;\n  object-fit: contain;\n  border: 1px solid #EEE;  \n  box-shadow: 2px 2px 4px 2px rgba(0, 0, 0, 0.2);\n`\n\nconst StyledCenterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledTitle = styled.div`\n  font-weight: bold;\n  text-align: center;\n  word-wrap:break-word; \n  word-break:break-all;\n  width: 100%;\n  margin: 10px auto 0;\n  @media (min-width: 576px) {\n    text-align: left;\n    margin: 0;\n  }\n`\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst StyledItemContent = styled.div`\n  flex: 1;\n  width: 100%;\n  @media (min-width: 576px) {\n    padding: 0 24px;\n  }\n`\n\nconst StyledList = styled(List)`\n  .ant-list-item {\n    flex-direction: column;\n    box-shadow: 0 2px 4px -4px rgba(0, 0, 0, 0.2);\n    @media (min-width: 576px) {\n      flex-direction: row;\n    }\n  }\n`\n\nconst Component = observer(() => {\n  const {HistoryStore} = useStores()\n  const loadMore = () => {\n    HistoryStore.find()\n  }\n\n  useEffect(() => {\n    console.log('进入组件')\n    return (() => {\n      console.log('组件卸载')\n      HistoryStore.reset()\n    })\n    //eslint-disable-next-line\n  }, [])\n\n  const options = {\n    initialLoad: true,\n    pageStart: 0,\n    loadMore,\n    hasMore: !HistoryStore.isLoading && HistoryStore.hasMore,\n    useWindow: true\n  }\n\n  return (\n    <div>\n      <InfiniteScroll {...options}>\n        <StyledList\n          dataSource={HistoryStore.list}\n          renderItem={\n            item => <List.Item key={item.id}>\n              <ImageWrapper>\n                <a href={item.attributes.url.attributes.url}\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\">\n                  <Img src={item.attributes.url.attributes.url} alt=\"\"/>\n                </a>\n              </ImageWrapper>\n\n              <StyledItemContent>\n                <StyledTitle>\n                  {item.attributes.filename}\n                </StyledTitle>\n                <ContentInput title=\"ImageURL\" baseUrl={item.attributes.url.attributes.url}/>\n                <ContentInput title=\"Markdown\" filename={item.attributes.filename}\n                              baseUrl={item.attributes.url.attributes.url}/>\n                <ContentInput title=\"HTML\" baseUrl={item.attributes.url.attributes.url}/>\n              </StyledItemContent>\n            </List.Item>\n\n          }>\n          {HistoryStore.isLoading && HistoryStore.hasMore && (\n            <StyledCenterDiv>\n              <Spin tip=\"加载中\"/>\n            </StyledCenterDiv>\n          )}\n        </StyledList>\n      </InfiniteScroll>\n    </div>\n  )\n})\n\nexport default Component","import React from 'react'\nimport List from '../components/List'\nimport styled from 'styled-components'\n\n\nconst StyledH1 = styled.h1`\n  margin-bottom: 0;\n`\n\nfunction History() {\n  return (\n    <>\n      <StyledH1>History</StyledH1>\n      <List/>\n    </>\n  )\n}\n\nexport default History;"],"sourceRoot":""}