{"version":3,"sources":["components/ContentInput.js","components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["StyledTitle","styled","div","StyledInput","input","ContentInput","props","type","title","baseUrl","filename","onClick","event","target","select","readOnly","value","Dragger","Upload","Result","StyledP","p","Image","img","ChangeSize","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","height","setHeight","widthStr","heightStr","serverFile","attributes","url","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","size","error","upload","then","console","log","catch","tip","spinning","isUploading","className","InboxOutlined","href","rel","src","alt","ref","onChange","current","placeholder","fullStr","StyledTips","children","Home","Tips","Uploader"],"mappings":"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","file":"static/js/9.62bf34df.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.div`\n  font-size: 0.9rem;\n`\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: 1px solid gray;\n  border-radius: 0.25rem;\n  margin-bottom: 0.2rem;\n  padding: .375rem .75rem;\n  width: 100%;\n  &:focus {\n    color: #495057;\n    background-color: #fff;\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n  }\n`\n\nfunction ContentInput(props) {\n  const {title, baseUrl, filename} = props\n  const handleClick = (event) => event.target.select()\n\n  const formatUrl = (type) => {\n    if (type === 'Markdown') {\n      return '![' + filename + '](' + baseUrl + ')'\n    } else if (type === 'ImageURL') {\n      return baseUrl\n    } else if (type === 'HTML') {\n      return '<a href=\"' + baseUrl + '\" target=\"_blank\"><img src=\"' + baseUrl + '\" ></a>'\n    } else {\n      return 'undefined'\n    }\n  }\n\n  return (\n    <div>\n      <StyledTitle>{title}</StyledTitle>\n      <StyledInput type=\"text\" onClick={handleClick} readOnly value={formatUrl(title)}/>\n    </div>\n  )\n}\n\nexport default ContentInput","import React, {useRef} from 'react'\nimport {useStores} from '../stores'\nimport {observer, useLocalStore} from 'mobx-react'\nimport {message, Upload, Spin} from 'antd'\nimport {InboxOutlined} from '@ant-design/icons'\nimport styled from 'styled-components'\nimport ContentInput from './ContentInput'\n\nconst {Dragger} = Upload\n\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  overflow: hidden;\n  padding: 14px 5px 0 5px;\n  @media (min-width: 321px) {\n    padding: 14px 14px 0 14px;\n  }\n`\nconst StyledP = styled.p`\n  margin: 8px 0;\n  text-align: center;\n`\nconst Image = styled.img`\n  max-width: 280px;\n  max-height: 280px;\n  margin: 0 auto;\n  display: block;\n`\n\nconst ChangeSize = styled.input`\n  border: 1px solid gray;\n  border-radius: 0.25rem;\n  padding: .375rem .75rem;\n  margin-top: 0.3rem;\n  &:first-child {\n    margin-right: 0.4rem;\n  }\n  &:focus {\n    color: #495057;\n    background-color: #fff;\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n  }\n`\n\nconst Component = observer(() => {\n  const {ImageStore, UserStore} = useStores()\n  const ref1 = useRef()\n  const ref2 = useRef()\n\n  const store = useLocalStore(() => ({\n    width: null,\n    setWidth(width) {\n      store.width = width\n    },\n    get widthStr() {\n      return store.width ? `/w/${store.width}` : ''\n    },\n    height: null,\n    setHeight(height) {\n      store.height = height\n    },\n    get heightStr() {\n      return store.height ? `/h/${store.height}` : ''\n    },\n    get fullStr() {\n      if (!store.widthStr && !store.heightStr) {\n        return ImageStore.serverFile.attributes.url.attributes.url\n      } else {\n        return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\n      }\n    }\n  }))\n\n  const bandWidthChange = () => {\n    store.setWidth(ref1.current.value)\n  }\n  const bandHeightChange = () => {\n    store.setHeight(ref2.current.value)\n  }\n\n  const props = {\n    showUploadList: false,\n    beforeUpload: file => {\n      ImageStore.setFile(file)\n      ImageStore.setFilename(file.name)\n      if (UserStore.currentUser === null) {\n        message.warning('请先登录再上传')\n        return false\n      }\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n        message.error('只能上传svg/png/jpg/jpeg/gif格式的图片')\n        return false\n      }\n      if (file.size > 1024 * 1024 * 2) {\n        message.error('不支持超过2M的图片')\n        return false\n      }\n      ImageStore.upload()\n        .then((serverFile) => {\n          console.log('上传成功')\n          console.log(serverFile)\n        }).catch(() => {\n        console.log('上传失败')\n      })\n      return false\n    }\n  }\n\n  return (\n    <div>\n      <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined/>\n          </p>\n          <p className=\"ant-upload-text\">点击选择或者直接拖拽图片</p>\n          <p className=\"ant-upload-hint\">\n            仅支持svg/png/jpg/jpeg/gif格式的图片,且大小不超过2M\n          </p>\n        </Dragger>\n      </Spin>\n      {\n        ImageStore.serverFile ? <Result>\n            <section>\n              <a href={ImageStore.serverFile.attributes.url.attributes.url}\n                 target=\"_blank\"\n                 rel=\"noopener noreferrer\">\n                <Image src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"\"/>\n              </a>\n            </section>\n            <StyledP>{ImageStore.filename}</StyledP>\n            <dl>\n              <dt>链接</dt>\n              <dd>\n                <a target=\"_blank\"\n                   rel=\"noopener noreferrer\"\n                   href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a>\n              </dd>\n              <dt>自定义尺寸</dt>\n              <dd>\n                <ChangeSize ref={ref1} onChange={bandWidthChange} placeholder=\"最大宽度（可选）\"/>\n                <ChangeSize ref={ref2} onChange={bandHeightChange} placeholder=\"最大高度（可选）\"/>\n              </dd>\n              <dd>\n                <ContentInput title=\"ImageURL\" baseUrl={store.fullStr}/>\n                <ContentInput title=\"Markdown\" baseUrl={store.fullStr} filename={ImageStore.filename}/>\n                <ContentInput title=\"HTML\" baseUrl={store.fullStr}/>\n              </dd>\n            </dl>\n          </Result> :\n          null\n      }\n    </div>\n  )\n})\n\nexport default Component","import React from 'react'\nimport {useStores} from '../stores'\nimport {observer} from 'mobx-react'\nimport styled from 'styled-components'\n\nconst StyledTips = styled.div`\n  color: white;\n  font-size: 16px;\n  background: #FF9800;\n  padding: 10px;\n  margin: 30px 0;\n  border-radius: 4px;\n`\n\nconst Component = observer(({children}) => {\n  const {UserStore} = useStores()\n  return (\n    <>\n      {\n        UserStore.currentUser ? null : <StyledTips>{children}</StyledTips>\n      }\n    </>\n  )\n})\nexport default Component","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Tips'\n\nconst Home = observer(() => {\n\n  return (\n    <>\n      <Tips>请登录后上传</Tips>\n      <Uploader/>\n    </>\n  )\n})\n\nexport default Home;"],"sourceRoot":""}