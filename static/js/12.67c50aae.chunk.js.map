{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","StyledButton","Button","layout","labelCol","span","wrapperCol","tailLayout","xs","sm","offset","Register","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"snBAOA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAQF,IAAOG,GAAV,KAKLC,EAAeJ,YAAOK,IAAPL,CAAH,KAIZM,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,GAAI,CAACH,KAAM,IACXI,GAAI,CAACJ,KAAM,GAAIK,OAAQ,KA+GZC,UA3GE,WAAO,IACdC,EAAcC,cAAdD,UACFE,EAAUC,cAmChB,OACE,kBAACnB,EAAD,KACE,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACMI,EADN,CAEEa,KAAK,QACLC,SAtCW,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACPC,MAAK,WACJP,QAAQC,IAAI,gEACZN,EAAQa,KAAK,QACZC,OAAM,WACTT,QAAQC,IAAI,oEA8BVS,eA1BiB,SAAAC,GACrBX,QAAQC,IAAI,UAAWU,MA2BnB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CACEC,UAjCa,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAiBE,QAAQC,OAAO,gEAC1CH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAaF,QAAQC,OAAO,mEAC5DD,QAAQG,cAkCT,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACES,IAAK,EACLT,QAAS,qDAEX,CACEU,IAAK,GACLV,QAAS,wDAIb,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCA7DG,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAsB,CAC5CX,UAD4C,SAClCC,EAAMC,GACd,OAAGS,EAAc,cAAgBT,EACxBE,QAAQG,UAEVH,QAAQC,OAAO,mDA6DlB,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKf,KAASxB,EACb,kBAACN,EAAD,CAAc+C,KAAK,UAAUC,SAAS,UAAtC","file":"static/js/12.67c50aae.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Input, Button } from 'antd'\nimport styled from 'styled-components'\nimport { useStores } from '../stores'\nimport { useHistory } from 'react-router-dom'\n\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 20px;\n`\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 4px;\n`\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 18,\n  },\n}\nconst tailLayout = {\n  wrapperCol: {\n    xs: {span: 18},\n    sm: {span: 18, offset: 6}\n  }\n}\n\nconst Register = () => {\n  const { AuthStore } = useStores()\n  const history = useHistory()\n\n\n  const onFinish = values => {\n    console.log('Success:', values)\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.register()\n      .then(() => {\n        console.log('注册成功，跳转到首页')\n        history.push('/')\n      }).catch(() => {\n      console.log('注册失败，什么都不做')\n    })\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  const validateUsername = (rule, value) => {\n    if (/\\W/.test(value)) { return Promise.reject('只能是字母数字下划线')}\n    if (value.length < 4 || value.length > 12) { return Promise.reject('用户名长度为4～12个字符')}\n    return Promise.resolve()\n  }\n\n  const validateConfirm = ({getFieldValue}) => ({\n    validator(rule, value) {\n      if(getFieldValue('password') === value) {\n        return Promise.resolve()\n      }\n      return Promise.reject('两次密码不一致')\n    }\n  })\n\n  return (\n    <Wrapper>\n      <Title>注册</Title>\n      <Form\n        {...layout}\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: '请输入用户名',\n            },\n            {\n              validator: validateUsername\n            }\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: '请输入密码',\n            },\n            {\n              min: 8,\n              message: '密码不少于8个字符'\n            },\n            {\n              max: 24,\n              message: '密码不多于24个字符'\n            }\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"确认密码\"\n          name=\"confirmPassword\"\n          rules={[\n            {\n              required: true,\n              message: '再次确认密码',\n            },\n            validateConfirm\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <StyledButton type=\"primary\" htmlType=\"submit\">\n            提交\n          </StyledButton>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  )\n}\n\nexport default Register"],"sourceRoot":""}